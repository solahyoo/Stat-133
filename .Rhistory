install(WDI)
library(WDI)
install.packages(WDI)
install.packages('WDI')
library(WDI)
WDIsearch(string='gdp', field='name', cache=NULL)
dir.create('./images')
dir.create('./code')
dir.create('./report')
download.file(url = 'https://www.quandl.com/api/v3/datasets/MOJO/BOXOFFICE_A.csv')
download.file(url = 'https://www.quandl.com/api/v3/datasets/MOJO/BOXOFFICE_A.csv',
dest = '/rawdata/yearlyboxoffice.csv')
dest = '/rawdata')
download.file(url = 'https://www.quandl.com/api/v3/datasets/MOJO/BOXOFFICE_A.csv',
dest = '/rawdata')
library(WDI)
library(WDI)
WDIsearch('gdp')
dat = WDI(country = 'United States', indicator = c('NY.GDP.MKTP.KD', 'NY.GDP.MKTP.KD.ZG', 'NY.GDP.MKTP.CD', 'NY.GDP.PCAP.KD', 'NY.GDP.PCAP.CD'), start = 1966, end = 2014)
dat = WDI(country = 'US', indicator = c('NY.GDP.MKTP.KD', 'NY.GDP.MKTP.KD.ZG', 'NY.GDP.MKTP.CD', 'NY.GDP.PCAP.KD', 'NY.GDP.PCAP.CD'), start = 1966, end = 2014)
dat
gdp_data <- WDI(indicator = c('NY.GDP.MKTP.KD', 'NY.GDP.MKTP.KD.ZG',
'NY.GDP.MKTP.CD', 'NY.GDP.PCAP.KD',
'NY.GDP.PCAP.CD', 'GDP per capita growth (annual %)'),
country = 'US', start = 1966, end = 2014)
gdp_data <- WDI(indicator = c('NY.GDP.MKTP.KD', 'NY.GDP.MKTP.KD.ZG',
'NY.GDP.MKTP.CD', 'NY.GDP.PCAP.KD',
'NY.GDP.PCAP.CD', 'NY.GDP.PCAP.KD.ZG'),
country = 'US', start = 1966, end = 2014)
str(gdp_data)
write.csv(file = 'GDPdata', x = gdp_data)
write.csv(file = '/rawdata/GDPdata.csv', x = gdp_data)
write.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/rawdata/GDPdata.csv', x = gdp_data)
write.csv(file = '/rawdata/gdp_data.csv', x = gdp_data)
setwd("C:/Users/tjf00_000/OneDrive/Documents/finalproj/code")
gdp_data = read.csv(file =
'C:/Users/tjf00_000/OneDrive/Documents/finalproj/gdp_data.csv')
gdp_data = read.csv(file =
'C:/Users/tjf00_000/OneDrive/Documents/finalproj/rawdata/gdp_data.csv')
gdp_data
str(gdp_data)
colnames(gdp_data)
test <- gdp_data
colnames(test) <- c('x', 'iso2c', 'country', 'year', 'GDP (constant 2005 US$)', 'GDP (current US$)', 'GDP growth (annual %)', 'GDP per capita (constant 2005 US$)', 'GDP per capita (current US$)', 'GDP per capita growth (annual %)')
colnames(test)
test
test[c(1, 3, 4, 5)]
test[c(1)]
test[c(3:end)]
test[c(3:5)]
length(test)
mode(test)
str(test)
test[c(3:10)]
test[test$year >= 1970]
test[which(test$year >= 1970)]
subset(test, year >= 1970)
gdp_data <- subset(gdp_data, year >= 1970)
str(gdp_data)
gdp_data <- gdp_data[c(3:10)]
str(gdp_data)
mode(gdp_data)
summary(gdp_data)
write.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/data/gdp_data.csv', x = gdp_data)
gdp_data
gdp_data <- gdp_data[c(3:10)]
gdp_data <- gdp_data[c(2:8)]
gdp_data
test
gdp_data = test
gdp_data <- subset(gdp_data, year >= 1970)
gdp_data <- gdp_data[c(3:10)]
gdp_data
colnames(gdp_data)
gdp_data[1]
gdp_data[, 1]
gdp_data[1, ]
rownames(gdp_data)
rownames(test) <- NULL
test
test[1,]
rownames(test)
rownames(test) <- NULL
test
rownames(test)
original <- test
test
attributes(test)$row.names <- NULL
test
test = original
tes
test
row.names(test) <- NULL
test
test[1,]
test <- read.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/rawdata/raw_gdp_data.csv', row.names = FALSE)
test <- read.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/rawdata/raw_gdp_data.csv', row.names = FALSE)
test <- read.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/rawdata/raw_gdp_data.csv')
row.names(test)
row.names(test) <- NULL
test
row.names(test) <- NULL
rownames(test)
rownames(test) <- NULL
rownames(test)
test
test[1, ]
C:/Users/tjf00_000/OneDrive/Documents/finalproj
write.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/data/gdp_data.csv', x = gdp_data, row.names = FALSE)
write.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/data/gdp_data.csv', x = gdp_data, row.names = FALSE)
test
test <- subset(test, year >= 1970)
test
nrows(test)
nrow(test)
row.names(test) <- 1:nrow(test)
test
gdp_data
gdp_data = read.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/rawdata/raw_gdp_data.csv')
gdp_data
colnames(gdp_data)
library(WDI)
WDIsearch("NY.GDP.MKTP.KD")
WDIsearch(indicator = "NY.GDP.MKTP.KD")
WDIsearch('gdp')
head(WDIsearch('gdp'))
head(WDIsearch('gdp'))
head(WDIsearch('gdp.*US'))
head(WDIsearch('gdp.*US'))
head(WDIsearch('gdp.*US'), 10)
head(WDIsearch('gdp.*US$'), 10)
head(WDIsearch('gdp.*US\$'), 10)
head(WDIsearch('gdp.*US/$'), 10)
head(WDIsearch('gdp.*US\\$'), 10)
colnames(gdp_data)
head(WDIsearch('gdp.*US\\$'), 20)
WDIsearch('gdp.*US\\$')
WDIsearch('NY.GDP.MKTP.KD.ZG')
WDIsearch('gdp growth')
gdp_data
colnames(gdp_data) <- c('x', 'iso2c', 'country', 'year',
'GDP (constant 2005 US$)',
'GDP growth (annual %)',
'GDP (current US$)',
'GDP per capita (constant 2005 US$)',
'GDP per capita (current US$)',
'GDP per capita growth (annual %)')
gdp_data
gdp_data <- subset(gdp_data, year >= 1970)
row.names(gdp_data) <- 1:nrow(gdp_data)
gdp_data
gdp_data <- gdp_data[c(3:10)]
gdp_data
write.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/data/gdp_data.csv', x = gdp_data, row.names = FALSE)
box_office <- read.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/rawdata/raw_box_office.csv')
box_office
box_office2 = box_office
box_office2[1, ]
box_office2[1]
box_office2[1, 1]
mode(box_office2[1, 1])
box_office2$Year
a = box_office2[1, 1]
a
a[1]
a[1][1]
box_office2$Year <- as.numeric(box_office2$Year)
box_office2
box_office2$Year <- as.numeric(as.character(box_office$Year))
box_office2
box_office2$Year <- as.character(box_office$Year)
box_office2
a = box_office2[1, 1]
a
a[4:6]
a[1]
substr(a, 4, 6)
a
gsub("12/31/", "", a)
box_office2$Year <- gsub("12/31/", "", as.character(box_office$Year))
box_office2
box_office2$Year <- as.numeric(gsub("12/31/", "", as.character(box_office$Year)))
box_office2
a = box_office2[1, 1]
a
mode(a)
colnames(box_office)
box_office2 <- box_office[c(1, 2, 4, 6:9)]
box_office2
box_office <- box_office[c(1, 2, 4, 6:9)]
box_office
box_office$Year <- as.numeric(gsub("12/31/", "",
as.character(box_office$Year)))
box_office
box_office2$Total.Gross <- box_office$Total.Gross * 1000000
box_office2
box_office2$Tickets.Sold <- box_office$Tickets.Sold * 1000000
box_office2
box_office
box_office$Total.Gross <- box_office$Total.Gross * 1000000
box_office$Tickets.Sold <- box_office$Tickets.Sold * 1000000
box_office
box_office2
box_office <- read.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/rawdata/raw_box_office.csv')
box_office$Year <- as.numeric(gsub("12/31/", "",
as.character(box_office$Year)))
box_office <- box_office[c(1, 2, 4, 6:8)]
box_office
box_office2
box_office$Total.Gross <- box_office$Total.Gross * 1000000
box_office$Tickets.Sold <- box_office$Tickets.Sold * 1000000
box_office
write.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/data/box_offce.csv',
x = box_office, row.names = FALSE)
top_movie <- read.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/rawdata/raw_top_grossing_movie_yearly.csv')
top_movie2 = top_movie
top_movie
url <- 'http://www.chemicool.com/'
rawpt <- readHTMLTable(url, which = 1, stringsAsFactors = FALSE)
library(XML)
install.packages('XML')
library(XML)
rawpt <- readHTMLTable(url, which = 1, stringsAsFactors = FALSE)
rawpt
url <- 'http://www.the-numbers.com/movies/#tab=year'
rawpt <- readHTMLTable(url, which = 1, stringsAsFactors = FALSE)
rawpt
str(rawpt)
str(top_movie)
write.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/rawdata/raw_top_grossing_movie_yearly.csv', x = rawpt)
top_movie <- read.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/rawdata/raw_top_grossing_movie_yearly.csv')
str(top_movie)
top_movie <- read.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/rawdata/raw_top_grossing_movie_yearly.csv',
stringsAsFactors = FALSE)
str(top_movie)
top_movie <- subset(top_movie, year >= 1970)
top_movie <- subset(top_movie, Year >= 1970)
top_movie
colnames(top_movie)
top_movie <- top_movie[c("Year", 'Movie', 'Genre', 'Production.Budget', 'Total.Domestic.Box.Office')]
top_movie
top_movie <- subset(top_movie, Year >= 1970 && Year < 2015)
top_movie
top_movie = top_movie2
top_movie <- subset(top_movie, Year >= 1970 || Year < 2015)
top_movie <- top_movie[c("Year", 'Movie', 'Genre', 'Production.Budget', 'Total.Domestic.Box.Office')]
top_movie
1 && 2
TRUE && FFALSE
TRUE && FALSE
top_movie = top_movie2
top_movie <- subset(top_movie, Year >= 1970 && Year < 2015)
top_movie
top_movie = top_movie2
top_movie <- subset(top_movie, Year >= 1970, Year < 2015)
top_movie
top_movie = top_movie2
top_movie <- subset(top_movie, Year >= 1970 & Year < 2015)
top_movie <- top_movie[c("Year", 'Movie', 'Genre', 'Production.Budget', 'Total.Domestic.Box.Office')]
top_movie
str(top_movie)
top_movie <- read.csv(file = '/rawdata/raw_top_grossing_movie_yearly.csv',
stringsAsFactors = FALSE)
top_movie <- subset(top_movie, Year >= 1970 & Year < 2015)
top_movie <- read.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/rawdata/raw_top_grossing_movie_yearly.csv',
stringsAsFactors = FALSE)
top_movie <- subset(top_movie, Year >= 1970 & Year < 2015)
top_movie <- top_movie[c("Year", 'Movie', 'Genre', 'Production.Budget',
top_movie
top_movie <- top_movie[c("Year", 'Movie', 'Genre', 'Production.Budget',
'Total.Domestic.Box.Office')]
top_movie
str(top_movie)
budget <- top_movie$Production.Budget
top_movie2 = top_movie
gsub("\\$", "", budget)
as.numeric(gsub("\\$", "", budget))
gsub("\\$.\\,", "", budget)
gsub("\\$*\\,", "", budget)
gsub(",", "", gsub("\\$", "", budget))
budget
top_movie
top_movie$Production.Budget <- as.numeric(gsub(",", "",
gsub("\\$", "", budget)))
top_movie
top_movie$Total.Domestic.Box.Office <- as.numeric(gsub(",", "",
gsub("\\$", "", total_box_office)))
total_box_office <- top_movie$Total.Domestic.Box.Office
top_movie$Total.Domestic.Box.Office <- as.numeric(gsub(",", "",
gsub("\\$", "", total_box_office)))
top_movie
row.names(top_movie) <- 1:nrow(top_movie)
top_movie
write.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/data/top_grossing_movie_yearly.csv', x = top_movie, row.names = FALSE)
genres <- read.csv('C:/Users/tjf00_000/OneDrive/Documents/finalproj/data/top_grossing_movie')
genres <- read.csv('C:/Users/tjf00_000/OneDrive/Documents/finalproj/data/top_grossing_movie.csv')
genres <- read.csv('C:/Users/tjf00_000/OneDrive/Documents/finalproj/data/top_grossing_movie_yearly.csv')
genres
str(genres)
top_movie <- read.csv('C:/Users/tjf00_000/OneDrive/Documents/finalproj/data/top_grossing_movie_yearly.csv')
top_movie[top_movie$Genre == 'Action']
top_movie[top_movie$Genre == 'Action', ]
unique(top_movie[c('Genre')])
top_movie[top_movie$Genre == 'Drama', ]
top_movie[top_movie$Genre == 'Drama', c('TOtal.Domestic.Box.Office')]
top_movie[top_movie$Genre == 'Drama', 1]
top_movie[top_movie$Genre == 'Drama', 5]
mean(top_movie[top_movie$Genre == 'Drama', 5])
mean(top_movie[top_movie$Genre == 'Drama', 4])
mean(top_movie[top_movie$Genre == 'Drama', 4], na.rm = TRUE)
aggregate(top_movie[, 4:5], list(top_movie$Genre), mean())
aggregate(top_movie[, 4:5], list(top_movie$Genre), mean
)
aggregate(top_movie[, 4:5], list(top_movie$Genre), mean)
aggregate(top_movie[, 4:5], list(top_movie$Genre), mean, na.rm = TRUE
)
gdp_data <- read.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/rawdata/raw_gdp_data.csv')
colnames(gdp_data) <- c('x', 'iso2c', 'country', 'year',
'GDP (constant 2005 US$)',
'GDP growth (annual %)',
'GDP (current US$)',
'GDP per capita (constant 2005 US$)',
'GDP per capita (current US$)',
'GDP per capita growth (annual %)')
gdp_data <- subset(gdp_data, year >= 1980)
row.names(gdp_data) <- 1:nrow(gdp_data)
gdp_data <- gdp_data[c(3:10)]
write.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/data/gdp_data.csv', x = gdp_data, row.names = FALSE)
top_movie <- read.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/rawdata/raw_top_grossing_movie_yearly.csv',
stringsAsFactors = FALSE)
top_movie <- subset(top_movie, Year >= 1980 & Year < 2015)
top_movie <- top_movie[c("Year", 'Movie', 'Genre', 'Production.Budget',
'Total.Domestic.Box.Office')]
budget <- top_movie$Production.Budget
top_movie$Production.Budget <- as.numeric(gsub(",", "",
gsub("\\$", "", budget)))
total_box_office <- top_movie$Total.Domestic.Box.Office
top_movie$Total.Domestic.Box.Office <- as.numeric(gsub(",", "",
gsub("\\$", "", total_box_office)))
row.names(top_movie) <- 1:nrow(top_movie)
write.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/data/top_grossing_movie_yearly.csv',
x = top_movie, row.names = FALSE)
top_movie <- read.csv('C:/Users/tjf00_000/OneDrive/Documents/finalproj/data/top_grossing_movie_yearly.csv')
top_movie
avg <- aggregate(top_movie[, 4:5], list(top_movie$Genre), mean, na.rm = TRUE)
avg
str(avg)
colnames(avg)[1]
colnames(avg)[1] <- 'Genre'
avg
aggregate(top_movie[, 1,4:5], list(top_movie$Genre), mean, na.rm = TRUE)
aggregate(top_movie[, 1], list(top_movie$Genre), mean, na.rm = TRUE)
aggregate(top_movie[, c(1, 4, 5)], list(top_movie$Genre), mean, na.rm = TRUE)
avg
library(ggplot2)
library(readr)
sc <- read_csv("https://raw.githubusercontent.com/gastonstat/stat133/master/datasets/liga2015.csv")
str(sc)
summary(sc$wins)
boxplot(sc$wins, main = "Boxplot: Wins")
hist(sc$wins)
plot(density(sc$wins))
density_wins <- density(sc$wins)
plot(density_wins)
polygon(density_wins, col = '#3088f0', border = '#3088f0')
dotchart(sc$wins)
dotchart(sc$wins, labels = sc$team)
dotchart(sort(sc$wins), labels = sc$team[order(sc$wins)])
dotchart(sort(sc$wins), labels = sc$team[order(sc$wins)],
bg = "blue")
dotchart(sort(sc$wins), labels = sc$team[order(sc$wins)],
bg = "blue", main = "Number of Wins")
library(scatterplot3d)
scatterplot3d(sc[ , c('wins', 'draws', 'losses')])
scatterplot3d(sc[ , c('wins', 'draws', 'losses')],
color = "blue", pch = 19)
library(readr)    # for reading data files
library(ggplot2)  # for plots
tents <- read_csv("https://raw.githubusercontent.com/gastonstat/stat133/master/datasets/tents1.csv")
ggplot(data = tents, aes(x = price)) +
geom_histogram()
ggplot(data = tents, aes(x = price)) +
geom_histogram(binwidth = 50)
ggplot(tents, aes(x = brand, y = weight, fill = brand)) +
geom_boxplot()
ggplot(tents, aes(x = weight, group = bestuse)) +
geom_density(aes(fill = bestuse), alpha = 0.7)
ggplot(tents, aes(x = height, group = capacity)) + geom_density(
aes(fill = capacity), alpha = 0.7)
hw <- ggplot(tents, aes(x = height, y = weight)) +
ggtitle("Tents: relation between height and weight")
hw + geom_point()
hw + geom_point(aes(size = price))
box_office <- read.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/rawdata/raw_box_office.csv')
box_office$Year <- as.numeric(gsub("12/31/", "",
as.character(box_office$Year)))
box_office <- box_office[c(1, 2, 4, 6:8)]
box_office$Total.Gross <- box_office$Total.Gross * 1000000
box_office$Tickets.Sold <- box_office$Tickets.Sold * 1000000
box_office
subset(gdp_data, Year < 2015)
subset(box_office, Year < 2015)
box_office <- subset(box_office, Year < 2015)
order(box_office$Year)
order(box_office$Year, decreasing = TRUE)
box_office[order(box_office$Year, decreasing = TRUE)]
box_office[order(box_office$Year, decreasing = TRUE), ]
box_office[order(box_office$Year), ]
box_office <- box_office[order(box_office$Year), ]
box_office
write.csv(file = '/data/box_offce.csv', x = box_office, row.names = FALSE)
write.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/data/box_offce.csv', x = box_office, row.names = FALSE)
top_movie <- read.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/rawdata/raw_top_grossing_movie_yearly.csv',
stringsAsFactors = FALSE)
top_movie <- subset(top_movie, Year >= 1980 & Year < 2015)
top_movie <- top_movie[c("Year", 'Movie', 'Genre', 'Production.Budget',
'Total.Domestic.Box.Office')]
budget <- top_movie$Production.Budget
top_movie$Production.Budget <- as.numeric(gsub(",", "",
gsub("\\$", "", budget)))
total_box_office <- top_movie$Total.Domestic.Box.Office
top_movie$Total.Domestic.Box.Office <- as.numeric(gsub(",", "",
gsub("\\$", "", total_box_office)))
top_movie <- top_movie[order(top_movie$Year), ]
row.names(top_movie) <- 1:nrow(top_movie)
top_movie
write.csv(file = 'C:/Users/tjf00_000/OneDrive/Documents/finalproj/data/top_grossing_movie_yearly.csv',
x = top_movie, row.names = FALSE)
aggregate(top_movie[, c(1, 4, 5)], list(top_movie$Genre), mean, na.rm = TRUE)
table(avg)
aggregate(top_movie[, c(1, 4, 5)], list(top_movie$Genre), mean, na.rm = TRUE)
a = aggregate(top_movie[, c(1, 4, 5)], list(top_movie$Genre), mean, na.rm = TRUE)
a[c(1, 2)]
table(a[c(1, 2)])
avg
top_movie
a = aggregate(top_movie[, c(1, 4, 5)], list(top_movie$Genre), sum, na.rm = TRUE)
a
sum(top_movie$Genre == 'Adventure')
install.packages('plyr')
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages('plyr')
count
install.packages("plyr")
library(plyr)
install.packages("plyr")
install.packages("plyr")
library(ggplot2)
.libPaths()
library(readr)
library(ggplot2)
library(graphics)
library(ggplot2)
library(WDI)
update.packages(plyr)
update.packages('plyr')
library(plyr)
library(plyr)
.libPaths()
remove.packages(ggplot2)
remove.packages('plyr')
remove.packages('ggplot2')
install.packages('ggplot2')
library(plyr)
library(plyr)
install.packages('ggplot2')
